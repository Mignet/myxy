{
currentPlayerHP: {
	class: java.lang.Integer
	value: 50
}
QUEST001_TASK003: []
QUEST001_TASK002: []
currentPlayerMPMax: {
	class: java.lang.Integer
	value: 50
}
TOWN_FOLK4: {
	class: com.v5ent.game.entity.EntityConfig
	animationConfig: [
		{
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 5
					y: 1
				}
				{
					x: 5
					y: 1
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
		{
			animationType: IMMOBILE
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 5
					y: 1
				}
				{
					x: 5
					y: 1
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
	]
	state: IMMOBILE
	entityID: TOWN_FOLK4
	conversationConfigPath: conversations/quest_finished.json
	questConfigPath: quests/quest001.json
	currentQuestID: 1
	itemTypeID: NONE
	boxWidth: 64
	boxHeight: 64
}
playerEquipInventory: [
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 1
		itemTypeAtLocation: HELMET05
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 2
		itemTypeAtLocation: WANDS01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
]
TOWN_FOLK2: {
	class: com.v5ent.game.entity.EntityConfig
	animationConfig: [
		{
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 4
				}
				{
					x: 4
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
		{
			animationType: IMMOBILE
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 4
				}
				{
					x: 4
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
	]
	state: IMMOBILE
	entityID: TOWN_FOLK2
	conversationConfigPath: conversations/quest_finished.json
	questConfigPath: quests/quest003.json
	currentQuestID: 3
	itemTypeID: NONE
	boxWidth: 64
	boxHeight: 64
}
playerQuests: [
	{
		class: com.v5ent.game.quest.QuestGraph
		questTasks: {
			2: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOWN
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: scripts/quest003_task002.json
					}
					TARGET_NUM: {
						class: java.lang.String
						value: 1
					}
				}
				id: 2
				taskPhrase: 请找回我丢失的孩子!
				questType: FETCH
			}
			1: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOWN
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: TOWN_FOLK2
					}
				}
				id: 1
				taskPhrase: 找回我的孩子!
				questType: RETURN
			}
		}
		questTaskDependencies: {
			2: []
			1: [
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 1
					destinationId: 2
				}
			]
		}
		questTitle: 把我的孩子找回来!
		questID: 3
		isQuestComplete: true
		goldReward: 20
		xpReward: 20
	}
	{
		class: com.v5ent.game.quest.QuestGraph
		questTasks: {
			2: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOP_WORLD
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: scripts/quest002_task002.json
					}
					TARGET_NUM: {
						class: java.lang.String
						value: 5
					}
				}
				id: 2
				taskPhrase: 请为我生病的妈妈收集5份草药
				questType: FETCH
			}
			1: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOWN
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: TOWN_FOLK1
					}
				}
				id: 1
				taskPhrase: 带着草药回来
				questType: RETURN
			}
		}
		questTaskDependencies: {
			2: []
			1: [
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 1
					destinationId: 2
				}
			]
		}
		questTitle: 妈妈的草药
		questID: 2
		isQuestComplete: true
		goldReward: 20
		xpReward: 20
	}
	{
		class: com.v5ent.game.quest.QuestGraph
		questTasks: {
			4: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOP_WORLD
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: BEAST_AREA
					}
				}
				id: 4
				taskPhrase: "找到野兽盛宴的地点, 镇子东边"
				questType: DISCOVER
			}
			3: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOP_WORLD
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: scripts/quest001_task003.json
					}
					TARGET_NUM: {
						class: java.lang.String
						value: 5
					}
				}
				id: 3
				taskPhrase: 收集5份皮毛
				questType: FETCH
			}
			2: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOP_WORLD
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: scripts/quest001_task002.json
					}
					TARGET_NUM: {
						class: java.lang.String
						value: 5
					}
				}
				id: 2
				taskPhrase: 收集5只角
				questType: FETCH
			}
			1: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: TOP_WORLD
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: TOWN_FOLK4
					}
				}
				id: 1
				taskPhrase: 带着东西回来
				questType: RETURN
			}
		}
		questTaskDependencies: {
			4: []
			3: [
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 3
					destinationId: 4
				}
			]
			2: [
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 2
					destinationId: 4
				}
			]
			1: [
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 1
					destinationId: 2
				}
				{
					class: com.v5ent.game.quest.QuestTaskDependency
					sourceId: 1
					destinationId: 3
				}
			]
		}
		questTitle: 野兽盛宴
		questID: 1
		isQuestComplete: true
		goldReward: 100
		xpReward: 100
	}
]
currentPlayerHPMax: {
	class: java.lang.Integer
	value: 50
}
currentPlayerMP: {
	class: java.lang.Integer
	value: 50
}
currentPlayerGP: {
	class: java.lang.Integer
	value: 1530
}
currentTime: {
	class: java.lang.Float
	value: 95654.6
}
playerPosition: {
	class: com.badlogic.gdx.math.Vector2
}
currentPlayerXP: {
	class: java.lang.Integer
	value: 140
}
currentPlayerXPMax: {
	class: java.lang.Integer
	value: 200
}
currentPlayerLevel: {
	class: java.lang.Integer
	value: 1
}
playerInventory: [
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		itemTypeAtLocation: ARMOR04
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 1
		itemTypeAtLocation: BOOTS03
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 2
		itemTypeAtLocation: WEAPON04
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 3
		itemTypeAtLocation: POTIONS01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 4
		itemTypeAtLocation: POTIONS01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 5
		itemTypeAtLocation: POTIONS01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 6
		itemTypeAtLocation: POTIONS01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 7
		itemTypeAtLocation: SCROLL01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 8
		itemTypeAtLocation: SCROLL01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 9
		itemTypeAtLocation: SCROLL01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 10
		itemTypeAtLocation: SHIELD02
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 11
		itemTypeAtLocation: WANDS02
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 12
		itemTypeAtLocation: WEAPON01
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
	{
		class: com.v5ent.game.ui.InventoryItemLocation
		locationIndex: 13
		itemTypeAtLocation: BABY001
		numberItemsAtLocation: 1
		itemNameProperty: Player_Inventory
	}
]
TOWN_FOLK1: {
	class: com.v5ent.game.entity.EntityConfig
	animationConfig: [
		{
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 3
				}
				{
					x: 3
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
		{
			animationType: IMMOBILE
			texturePaths: [
				sprites/characters/Player0.png
				sprites/characters/Player1.png
			]
			gridPoints: [
				{
					x: 3
				}
				{
					x: 3
				}
			]
			frameWidth: 64
			frameHeight: 64
		}
	]
	state: IMMOBILE
	entityID: TOWN_FOLK1
	conversationConfigPath: conversations/quest_finished.json
	questConfigPath: quests/quest002.json
	currentQuestID: 2
	itemTypeID: NONE
	boxWidth: 64
	boxHeight: 64
}
currentMapType: {
	class: java.lang.String
	value: TOP_WORLD
}
QUEST002_TASK002: []
QUEST003_TASK002: []
}